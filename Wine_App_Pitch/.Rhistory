server <- function(input, output) {
output$quality <- renderText({
"you have selected"
})
})
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
numericInput(inputId = "var1", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0),
textOutput(outputId = "quality")
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
"you have selected"
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
numericInput(inputId = "var1", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0),
textOutput(outputId = "quality")
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
"you have selected", input$var1
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
numericInput(inputId = "var1", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0),
textOutput(outputId = "quality")
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
paste("you have selected", input$var1)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0),
textOutput(outputId = "quality")
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
paste("you have selected", input$fixed.acidity)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
)
)
textOutput(outputId = "quality")
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
paste("you have selected", input$fixed.acidity)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality")
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
),
mainPanel(
textOutput(outputId = "quality")
)
)
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
paste("you have selected", input$fixed.acidity)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number", value = 25,
min = 1, max = 100),
plotOutput("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality")
)
# This line set up the ui app
server <- function(input, output) {
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality"),
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
),
mainPanel(
textOutput(outputId = "quality")
)
)
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
paste("you have selected", input$fixed.acidity)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality"),
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
),
mainPanel(
textOutput(outputId = "quality")
)
)
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
paste("you have selected", input$fixed.acidity, "for Fixed Acidity")
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality"),
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
),
mainPanel(
textOutput(outputId = "quality")
)
)
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
red <- read.csv("winequality-red.csv", sep=";")
head(red)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
library(shiny)
runApp(Wine_App)
setwd("~/Documents/Coursera/DataScience/Data Products")
runApp(Wine_App)
runApp(Wine_App)
runApp("Wine_App")
runApp("Wine_App")
winequality.red <- read.csv("~/Documents/Coursera/DataScience/Data Products/Wine_App/data/winequality-red.csv", sep=";")
View(winequality.red)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality"),
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
),
mainPanel(
textOutput(outputId = "quality")
)
)
)
# This line set up the ui app
server <- function(input, output) {
output$quality <- renderText({
red <- read.csv("winequality-red.csv", sep=";")
head(red)
})
}
# this sets up the server app
shinyApp(ui = ui, server = server)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
saveRDS(red)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
library(shiny)
ui <- fluidPage(
titlePanel("Wine Quality"),
sidebarLayout(
sidebarPanel(
numericInput(inputId = "fixed.acidity", label = "Fixed Acidity", value = 0),
numericInput(inputId = "volatile.acidity", label = "volatile Acidity", value = 0),
numericInput(inputId = "citric.acid", label = "Citric Acid", value = 0),
numericInput(inputId = "residual.sugar", label = "Residual Sugar", value = 0),
numericInput(inputId = "chlorides", label = "Chlorides", value = 0),
numericInput(inputId = "free.sulfur.dioxide", label = "Free Sulfur Dioxide", value = 0),
numericInput(inputId = "total.sulfur.dioxide", label = "Total Sulfur Dioxide", value = 0),
numericInput(inputId = "density", label = "Density", value = 0),
numericInput(inputId = "pH", label = "pH", value = 0),
numericInput(inputId = "sulphates", label = "Sulphates", value = 0),
numericInput(inputId = "alcohol", label = "Alcohol", value = 0)
),
mainPanel(
tableOutput("red.data"),
textOutput("quality.red"),
textOutput("quality.white")
)
)
)
# This line set up the ui app
server <- function(input, output) {
red <- read.csv("data/winequality-red.csv")
#white <- read.csv("data/winequality-white.csv")
output$quality.red <- renderText(
)
}
# this sets up the server app
shinyApp(ui = ui, server = server)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
user <- data.frame(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
predict.randomForest(mod_rF.red, newdata = user)
predict.randomForest(mod_rF.red, newdata = user)
detach("package:randomForest", unload=TRUE)
library("randomForest", lib.loc="~/Library/R/3.3/library")
predict.randomForest(mod_rF.red, newdata = user)
predict(mod_RF.red, newdata = user)
colnames(red)
user <- data.frame("fixed.acidity" = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
user <- data.frame("fixed.acidity" = 1, "volatile.acidity"= 1, "citric.acid" = 1, "residual.sugar" = 1, "chlorides" = 1, 1, 1, 1, 1, 1, 1)
user <- data.frame("fixed.acidity" = 1, "volatile.acidity"= 1, "citric.acid" = 1, "residual.sugar" = 1, "chlorides" = 1, "free.sulfur.dioxide" = 1, "total.sulfur.dioxide"=  1, "density" = 1, "pH" = 1, "sulphates" = 1, "alcohol" = 1)
predict(mod_RF.red, newdata = user)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
sumary(red)
summary(red)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
summary(red)
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
p("The output of the Random Forest Algorithm behind this Shiny App are shown above.  A quick test to show that they work, change the Volatile Acidity to .12.  That will change the white wine value.  Then change the Total Sulfur Dioxide to 289.  That will shift the red wine value.  Please note that this app sometime takes some time initally load the two sentances that will appear above with the final quality ranking."),             p("This app is designed to help analyze the quality of wine.  The data is from the UCI Machine Learning Repository (http://archive.ics.uci.edu/ml/index.html) and the data set is called “Wine Quality Data Set”.  It contains 11 values: fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free suffer dioxide, total sulfur dioxide, density, pH, sulphates, alcohol, and quality.  Quality is the output variable and is based on a score of 1-10."),
runApp("Wine_App")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='dianeclow', token='9E8A3EB8DBEEDFBB4A1E7F8B5453599D', secret='YVFjhaasUiHTnEv5ndsKeNI7k6D1W0AAgCZZO/Ul')
library(rsconnect)
rsconnect::deployApp('Wine_App')
rsconnect::deployApp('Wine_App')
rsconnect::deployApp('Wine_App')
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
rsconnect::deployApp('Wine_App')
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
rsconnect::deployApp('Wine_App')
runApp("Wine_App")
runApp("Wine_App")
rsconnect::deployApp('Wine_App')
runApp("Wine_App")
rsconnect::deployApp('Wine_App')
runApp("Wine_App")
mod_RF.red$finalModel
runApp("Wine_App")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products")
author("mydeck")
library(slidify)
author("mydeck")
author("Wine_App_Pitch")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
runApp("Wine_App")
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products")
slidify("index.Rmd")
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products/Wine_App_Pitch")
slidify("index.Rmd")
red <- read.csv("data/winequality-red.csv")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products")
runApp("Wine_App")
runApp("Wine_App")
runApp("Wine_App")
rsconnect::deployApp('Wine_App')
rsconnect::deployApp('Wine_App')
runApp("Wine_App")
rsconnect::deployApp('Wine_App')
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products/Wine_App_Pitch")
rsconnect::deployApp('Wine_App')
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products")
rsconnect::deployApp('Wine_App')
summary(mod_RF.red)
mod_RF.red$finalModel
mod_RF.white$finalModel
setwd("~/Documents/Coursera/DataScience/Developing-Data-Products/Wine_App_Pitch")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user = "DianeClow", repo = "Developing-Data-Products", host = 'github')
publish(user = "DianeClow", repo = "Developing-Data-Products-Slidify", host = 'github')
xcode-select --install
publish(user = "DianeClow", repo = "Developing-Data-Products-Slidify", host = 'github')
